# Put Y,N or number next to the equal sign to determine execution
# Don't forget the quotation marks for the letters
# All variables in this list end with v

&input_data
ATOMSPHV      = 'N'
BASISV        = 'DEFAULT' ! Specify basis for calculation(basis.txt)
CALCTYPEV     = 'SCF-ONLY'
DFTD3V        = 'N' ! Set to Y to do include Grimmes DFT-D3 dispersion
DIAG1V        =  1  ! diagonalization to use on regular arrays (diagge.f90)
DIAG2V        =  1  ! diagonalization to use on packed arrays (diag_dspgv.f90)
DIAG3V        =  0  ! diagonalization to use on parallel (sdiagge_n.f90)
DMATV         = 'N' ! Create/use/mix density matrix
DOSOCCUV      = 'N' ! Controls wether to calculate density of states
EXCITEDV      = 'N' ! Determines if this is an excited state calculation
FIXMV         = 'N' ! Fix spin moment
FORMFAKV      = 'N' ! this controls if FORMFAK is executed
FRAGMENTV     = 'N' ! Process CLUSTER in fragments
JNTDOSV       = 'N' ! This calculates jonit density of states
LIBXCV        = 'N' ! set to Y to use libxc functionals
MATDIPOLEV    = 'N'
MAXSCFV       = 100 ! Maximum SCF iterations
MIXINGV       = 'P' ! (H)amiltonian (P)otential (D)ensity matrix mixing
MOLDENV       = 'N' ! Use molden and wfx driver
MPI_IOV       = 'N' ! Use MPI IO for scalapack distribution
NBOV          = 'N' ! Use NBO driver
NONSCFV       = 'N' ! Set to Y to do a non SCF calculation
NONSCFFORCESV = 'N' ! Set to Y to calculate forces in a non SCF calculation
NWFOUTV       = 10    ! Write WFOUT file for every N-th iteration
POPULATIONV   = 'N' ! Population analysis
RHOGRIDV      = 'N' ! Set to Y to execute RHOGRID
SCALEDLBFGSV  = 'Y' ! Set to Y to scaled LBFGS
SCFTOLV       = 1.0D-6 ! SCF tolerance
SPNORBV       = 'N' ! Run SPNORB
SPNPOLV       = 'Y' ! Run spin polarized calculation from CLUSTER
SOLVENTV      = 'N' ! Set to Y to include solvent effect (SOLVENTS)
SCANMESHV     = 'N' ! Set to Y to use SCAN mesh
SYMMETRYV     = 'N' ! Set to Y to detect symmetry
WFGRIDV       = 'N' ! set to Y to write orbitals in cube format
WFFRMV        = 'N' ! set to Y to write Fermi orbitals in cube format
&end
